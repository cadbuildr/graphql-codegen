# -------------------------------------------------
# Directives understood by graphql-codegen
# -------------------------------------------------
directive @compute(fn: String!)         on FIELD_DEFINITION
directive @expand(into: String!)        on OBJECT | FIELD_DEFINITION

# -------------------------------------------------
# Scalars and enums
# -------------------------------------------------
scalar DateTime
scalar CustomScalar1
scalar CustomScalar2

enum Role {
  ADMIN
  USER
  GUEST
}

# -------------------------------------------------
# Interfaces
# -------------------------------------------------
interface Node {                        # shared "id"
  id: ID!
}

interface PostBase implements Node {    # fields common to every post flavour
  id: ID!
  title: String!
  author: User!
}

# -------------------------------------------------
# Main types
# -------------------------------------------------

"""
A User may expand into a project-specific low-level profile node
when the active compiler does **not** treat `User` as primitive.
"""
type User implements Node {
  id: ID!
  username: String!
  email: String
  role: Role!
  lastLogin: DateTime
  favouritePost: Post                    # reference to any variant
}

# -------- concrete post variants -------------------------------------------

type TextPost implements PostBase {
  id: ID!
  title: String!
  author: User!
  content: String!
}

type ImagePost implements PostBase {
  id: ID!
  title: String!
  author: User!
  imageUrl: String!
  caption: String
}

type VideoPost implements PostBase {
  id: ID!
  title: String!
  author: User!
  videoUrl: String!
  duration: Int
}

# -------- unions -----------------------------------------------------------

"""
Single alias that can hold any concrete post variant.
"""
union Post = TextPost | ImagePost | VideoPost

"""
Return type of a global search bar.
"""
union SearchResult = User | TextPost | ImagePost | VideoPost
